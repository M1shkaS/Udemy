'use strict';

//Переменные let, const,var
//Прямых констант в js как таковых нет, свойства в обьекте или элементы в массиве можно менять, но менять obj,arr на string,number и тд нельзя
//var существует ещё до того как была обьявлена в коде,она будет видна везде, значение только будет undefined


//Замыкания
//var имеет функциональную область видимости, но не блочную как let и const
// Когда функция создана и передаётся куда-либо, или возвращается из другой функции, то она носит с собой рюкзак. А в этом рюкзаке хранятся все переменные, которые были в области видимости во время создания этой функции.
function createCounter() {
   var counter = 0
   const myFunction = function () {
      counter = counter + 1
      return counter
   }
   return myFunction
}
const increment = createCounter()
const c1 = increment()
const c2 = increment()
const c3 = increment()
console.log('example increment', c1, c2, c3)
const second = createCounter()
const b = second()
console.log('example increment', b)

 // Лексическое окружение - некий внутренний (скрытый, технический) объект функции, блока или скрипта
 // Оно делится на внутреннюю и внешнюю части
 // Внутренняя часть (env record) хранит локальные переменные функции и this
 // После выполнения функции её лекс. окр. уничтожается
 // Замыкание функции (её окружение) (closure) формируется из лексического окружения места, где она была создана