import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './components/app/app';


const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
   <React.StrictMode>
      <App />
   </React.StrictMode>
);

//Алгоритм реканселяции(согласования), сравнивает старые и новые dom дерева
//Если меняется корневая сущность, допустим с ul на div, то реакт думает,что внутри всё поменялось и уничтожает это  и в приложении будет создано заново это всё
//А если меняются какие-то атрибуты т.е пропссы и тд, то будет уничтожен этот элемент, допустим ul  будет заменен на ul с другими атрибутами, но с теми же внутренностями
//Дальше алгоритм идёт рекурсивно и смотрит все дочерние элементы
//REACT СОХРАНЯЕТ КОПИЮ предыдущего 
//дерева элементов и компонентов, но при этом сохраняет новое дерево, которое должно быть построено и дальше идёт сравнение элементов друг с другом
//,если реакт находит в них отличия, то изменённые элемекнты будет создавать мутацию(создавать перерисовку этого элемента в реальном DOM дереве)
//По атрибуту key реакт определяет поменлся ли элемент