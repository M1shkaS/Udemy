{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelServices.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","id","ErrorMessage","src","img","alt","style","display","width","height","margin","MarvelServices","_apiBase","_apiKey","_baseOffset","getResourses","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformChar","getCharacter","characterId","char","descr","description","slice","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onError","updateChar","Math","floor","random","onUpdateChar","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","styleImg","includes","objectFit","CharList","characters","newItemLoading","charEnded","charRefsArr","setCharRef","elem","push","removeCharSelected","forEach","item","classList","remove","onFocusCharItems","idx","add","focus","console","dir","requesCharacterstScroll","window","removeEventListener","scrollY","innerHeight","document","body","offsetHeight","onRequest","updateCharacters","onCharactersLoading","onCharactersLoaded","newCharacters","ended","length","renderList","ref","tabIndex","props","onCharSelected","addEventListener","disabled","Skeleton","CharInfo","charId","onCharLoading","prevProps","prevState","sceleton","ErrorBoundary","errorInfo","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c932eaee.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import './spinner.scss';\r\n\r\n\r\nconst Spinner = () => {\r\n   return (\r\n      <div className=\"windows8\">\r\n         <div className=\"wBall\" id=\"wBall_1\">\r\n            <div className=\"wInnerBall\"></div>\r\n         </div>\r\n         <div className=\"wBall\" id=\"wBall_2\">\r\n            <div className=\"wInnerBall\"></div>\r\n         </div>\r\n         <div className=\"wBall\" id=\"wBall_3\">\r\n            <div className=\"wInnerBall\"></div>\r\n         </div>\r\n         <div className=\"wBall\" id=\"wBall_4\">\r\n            <div className=\"wInnerBall\"></div>\r\n         </div>\r\n         <div className=\"wBall\" id=\"wBall_5\">\r\n            <div className=\"wInnerBall\"></div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst ErrorMessage = () => {\r\n   // Конечно прикольно, но лучше так не делать. Такое правильно поместить в сам компнонент Error\r\n   // return <img src={process.env.PUBLIC_URL + '/error.gif'} />\r\n\r\n   return <img src={img}\r\n      alt=\"Error\"\r\n      style={{ display: 'block', width: '250px', height: '250px', margin: '0 auto' }}\r\n   />\r\n}\r\n\r\nexport default ErrorMessage;","\r\nclass MarvelServices {\r\n   _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n   _apiKey = 'apikey=7003a06bfb4ab4d72d650777a0f77351';\r\n   _baseOffset = 210;\r\n\r\n   getResourses = async (url) => {\r\n      const res = await fetch(url);\r\n\r\n      if (!res.ok) {\r\n         throw new Error(`Error, status: ${res.status}`);\r\n      }\r\n      return await res.json();\r\n   }\r\n\r\n\r\n   getAllCharacters = async (offset = this._baseOffset) => {\r\n      const res = await this.getResourses(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n      return res.data.results.map(this._transformChar)\r\n   };\r\n\r\n   getCharacter = async (characterId) => {\r\n      const res = await this.getResourses(`${this._apiBase}characters/${characterId}?${this._apiKey}`);\r\n      return this._transformChar(res.data.results[0]);\r\n   }\r\n\r\n   _transformChar = (char) => {\r\n      const descr = char.description ? char.description.slice(0, 210) + '...' : 'Извините, данных нет';\r\n      return {\r\n         id: char.id,\r\n         name: char.name,\r\n         description: descr,\r\n         thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n         homepage: char.urls[0].url,\r\n         wiki: char.urls[1].url,\r\n         comics: char.comics.items\r\n      }\r\n   }\r\n\r\n}\r\n\r\nexport default MarvelServices;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelServices from '../../services/MarvelServices';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n\n   state = {\n      char: {},\n      loading: true,\n      error: false\n   }\n\n   componentDidMount() {\n      this.updateChar();\n      // this.timerId = setInterval(this.updateChar, 3000);\n      // this.foo.bar = 0;\n   }\n\n   componentWillUnmount() {\n      // clearInterval(this.timerId);\n   }\n\n   marvelService = new MarvelServices();\n\n   onCharLoaded = (char) => {\n      this.setState({\n         char,\n         loading: false\n      });\n   }\n\n   onError = () => {\n      this.setState({\n         loading: false,\n         error: true\n      });\n   }\n\n   updateChar = () => {\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n      this.onUpdateChar();\n      this.marvelService\n         .getCharacter(id)\n         .then(this.onCharLoaded)\n         .catch(this.onError)\n   }\n\n   onUpdateChar = () => {\n      this.setState({\n         loading: true\n      });\n\n   }\n\n   render() {\n      const { char, loading, error } = this.state;\n      const errorMessage = error ? <ErrorMessage /> : null;\n      const spinner = loading ? <Spinner /> : null;\n      const content = !(error || loading) ? <View char={char} /> : null;\n\n      //Условный рендеринг\n      return (\n         <div className=\"randomchar\">\n\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n               <p className=\"randomchar__title\">\n                  Randomm character for today!<br />\n                  Do you want to get to know him better?\n               </p>\n               <p className=\"randomchar__title\">\n                  Or choose another one\n               </p>\n               <button onClick={this.updateChar} className=\"button button__main\">\n                  <div className=\"inner\">try it</div>\n               </button>\n               <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n            </div>\n         </div>\n      )\n   }\n}\n\nconst View = ({ char }) => {\n   const { name, thumbnail, homepage, wiki, description } = char;\n\n   const checkThumbnail = thumbnail.includes('image_not_available');\n   const styleImg = checkThumbnail ? { objectFit: 'contain' } : { objectFit: 'cover' }\n\n\n   return (\n      <div className=\"randomchar__block\">\n         <img src={thumbnail} alt=\"Random character\" style={styleImg} className=\"randomchar__img\" />\n         <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n               {description}\n            </p>\n            <div className=\"randomchar__btns\">\n               <a href={homepage} className=\"button button__main\">\n                  <div className=\"inner\">homepage</div>\n               </a>\n               <a href={wiki} className=\"button button__secondary\">\n                  <div className=\"inner\">Wiki</div>\n               </a>\n            </div>\n         </div>\n      </div>\n   )\n}\n\nexport default RandomChar;\n\n\n// Если в app мы удалим RandomChar и в нём будет setInterval и не будет  clearInterval, то он он будет продолжать работать и это плохо(утечка памяти)","import { Component } from 'react';\nimport PropTypes from 'prop-types'\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport MarvelServices from '../../services/MarvelServices';\n\n\nimport './charList.scss';\n\nclass CharList extends Component {\n   state = {\n      loading: true,\n      error: false,\n      characters: [],\n      offset: 210,\n      newItemLoading: false,\n      charEnded: false\n   }\n   marvelService = new MarvelServices();\n\n   charRefsArr = [];\n\n   setCharRef = (elem) => {\n      this.charRefsArr.push(elem)\n   }\n\n   removeCharSelected = () => {\n      this.charRefsArr.forEach(item => item.classList.remove('char__item_selected'));\n   }\n\n   onFocusCharItems = (idx) => {\n      this.removeCharSelected();\n      this.charRefsArr[idx].classList.add('char__item_selected');\n      this.charRefsArr[idx].focus();\n      console.dir(this.charRefsArr[idx]);\n   }\n\n\n   componentDidMount() {\n      if (this.state.offset < 219) {\n         this.updateCharacters();\n      }\n\n      window.addEventListener('scroll', this.requesCharacterstScroll)\n   }\n\n   componentWillUnmount() {\n      window.removeEventListener('scroll', this.requesCharacterstScroll);\n   }\n\n   requesCharacterstScroll = () => {\n      const { offset, newItemLoading, charEnded } = this.state;\n\n      if (offset < 219) return;\n      if (newItemLoading) return;\n      if (charEnded) window.removeEventListener('scroll', this.requesCharacterstScroll);\n\n      if (window.scrollY + window.innerHeight >= document.body.offsetHeight) {\n         this.onRequest(offset);\n      }\n   }\n\n   updateCharacters = () => {\n      this.onRequest();\n   }\n\n   onRequest = (offset) => {\n      this.onCharactersLoading();\n\n      this.marvelService\n         .getAllCharacters(offset)\n         .then(this.onCharactersLoaded)\n         .catch(this.onError)\n   }\n\n   onCharactersLoading = () => {\n      this.setState({ newItemLoading: true })\n   };\n\n   onCharactersLoaded = (newCharacters) => {\n      let ended = false;\n      if (newCharacters.length < 9) {\n         ended = true;\n      }\n      this.setState(({ characters, offset }) => ({\n         characters: [...characters, ...newCharacters],\n         loading: false,\n         newItemLoading: false,\n         offset: offset + 9,\n         charEnded: ended\n      }));\n   }\n\n   onError = () => {\n      this.setState({ error: true, loading: false });\n   }\n\n   renderList = (items) => {\n      const characters = items.map((item, idx) => {\n         const { name, thumbnail, id } = item;\n\n         const checkThumbnail = thumbnail.includes('image_not_available');\n         const styleImg = checkThumbnail ? { objectFit: 'unset' } : { objectFit: 'cover' };\n         return (\n            <li ref={this.setCharRef} tabIndex={0} onClick={() => { this.props.onCharSelected(id); this.onFocusCharItems(idx) }\n            } className=\"char__item\" key={id} >\n               <img style={styleImg} src={thumbnail} alt={name} />\n               <div className=\"char__name\">{name}</div>\n            </li >\n         )\n      })\n\n      return (\n         <ul className=\"char__grid\" >\n            {characters}\n         </ul>\n      )\n   }\n\n   render() {\n      // this.foo.bar = 0;\n      const { loading, error, characters, newItemLoading, offset, charEnded } = this.state;\n\n      const items = this.renderList(characters);\n      const spinner = loading ? <Spinner /> : null;\n      const errorMessage = error ? <ErrorMessage /> : null;\n      const content = !(error || loading) ? items : null\n\n      return (\n         <div className=\"char__list\">\n            {spinner}\n            {errorMessage}\n            {content}\n            <button\n               style={{ 'display': charEnded ? 'none' : 'block' }}\n               disabled={newItemLoading}\n               onClick={() => this.onRequest(offset)}\n               className=\"button button__main button__long\">\n               <div className=\"inner\">load more</div>\n            </button>\n         </div>\n      )\n   }\n\n}\n\nexport default CharList;\n\nCharList.propTypes = {\n   onCharSelected: PropTypes.func.isRequired\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelServices from '../../services/MarvelServices';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n   state = {\n      char: null,\n      error: false,\n      loading: false\n   }\n\n   marvelService = new MarvelServices();\n\n   //Выполняется после того как компонент был создан\n   componentDidMount() {\n      this.updateChar();\n      // this.foo.bar = 0;\n   }\n\n   componentDidUpdate(prevProps, prevState) {\n      if (this.props.charId !== prevProps.charId) {\n         this.updateChar();\n      }\n   }\n\n   updateChar = () => {\n      const { charId } = this.props;\n\n      if (!charId) return;\n\n      this.onCharLoading();\n\n      this.marvelService\n         .getCharacter(charId)\n         .then(this.onCharLoaded)\n         .catch(this.onError);\n   }\n\n   onCharLoaded = (char) => {\n      this.setState({ char, loading: false });\n   }\n\n   onCharLoading = () => {\n      this.setState({\n         loading: true\n      });\n   }\n\n   onError = () => {\n      this.setState({\n         loading: false,\n         error: true\n      });\n   }\n\n   render() {\n      const { char, loading, error } = this.state;\n      const errorMessage = error ? <ErrorMessage /> : null;\n      const spinner = loading ? <Spinner /> : null;\n      const content = !(error || loading || !char) ? <View char={char} /> : null;\n      const sceleton = char || spinner || error ? null : <Skeleton />;\n      return (\n         <div className=\"char__info\">\n            {errorMessage}\n            {content}\n            {spinner}\n            {sceleton}\n         </div>\n      )\n   }\n}\n\nconst View = ({ char }) => {\n   const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n   let items = null;\n\n   if (comics.length > 0) {\n      items = comics.map((item, id) => {\n         // eslint-disable-next-line\n         if (id > 9) return;\n\n         return (\n            <li key={id} className=\"char__comics-item\">\n               {item.name}\n            </li>\n         )\n      })\n   } else {\n      items = 'Комиксов нет';\n   }\n\n   const checkThumbnail = thumbnail.includes('image_not_available');\n   const styleImg = checkThumbnail ? { objectFit: 'contain' } : { objectFit: 'cover' };\n\n   return (\n      <>\n         <div className=\"char__basics\">\n            <img style={styleImg} src={thumbnail} alt={name} />\n            <div>\n               <div className=\"char__info-name\">{name}</div>\n               <div className=\"char__btns\">\n                  <a href={homepage} className=\"button button__main\">\n                     <div className=\"inner\">homepage</div>\n                  </a>\n                  <a href={wiki} className=\"button button__secondary\">\n                     <div className=\"inner\">Wiki</div>\n                  </a>\n               </div>\n            </div>\n         </div>\n         <div className=\"char__descr\">\n            {description}\n         </div>\n         <div className=\"char__comics\">Comics:</div>\n         <ul className=\"char__comics-list\">\n            {items}\n         </ul>\n      </>\n   )\n}\nexport default CharInfo;\n\n// С помощью PropTypes можно устанавливать дефолтные значения по умолчанию\nCharInfo.propTypes = {\n   charId: PropTypes.number\n}\n\n// Предохранители стали обязательными. Предохранители - это классовые компоненты, которые оборачивают другие компоненты и если в их дочерних компонентах происходит ошибка, то они будут её ловить и ломается лишь этот компонент, а не всё\n// Они ловят не все ошибки. Только ошибки при запуске метода render, методы жизненного цикла и в конструкторах дочернего компонента\n// НЕ ЛОВЯТ. Ошибки, которые произошли в обработчиках событий, в ассинхроном коде, в самом предохранителе\n\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n   state = {\r\n      error: false\r\n   }\r\n\r\n   componentDidCatch(error, errorInfo) {\r\n      console.log(error, errorInfo);\r\n\r\n      this.setState({ error: true })\r\n   }\r\n\r\n   render() {\r\n      if (this.state.error) {\r\n         return <ErrorMessage />\r\n      }\r\n\r\n      return this.props.children;\r\n   }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n   state = {\n      selectedChar: null\n   }\n\n   onCharSelected = (id) => {\n      this.setState({ selectedChar: id });\n   }\n   render() {\n      return (\n         <div className=\"app\">\n            <AppHeader />\n            <main>\n               <ErrorBoundary>\n                  <RandomChar />\n               </ErrorBoundary>\n               <div className=\"char__content\">\n                  <ErrorBoundary>\n                     <CharList onCharSelected={this.onCharSelected} />\n                  </ErrorBoundary>\n                  <ErrorBoundary>\n                     <CharInfo charId={this.state.selectedChar} />\n                  </ErrorBoundary>\n               </div>\n               <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n            </main>\n         </div>\n      )\n   }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nimport MarvelServices from './services/MarvelServices'\n\nconst marvelServices = new MarvelServices();\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n"],"sourceRoot":""}